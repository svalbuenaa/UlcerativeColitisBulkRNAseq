ggplot(t_genes_list_norm, aes(y=get(arg_gene), x = Inflammation, color=Inflammation))+
geom_boxplot()+
geom_jitter(width=0.2, alpha=0.5, color="black")+
labs(title=arg_gene,
x="Inflammation status",
y="Normalized expression")+
theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
aspect.ratio = 1.5,
plot.background = element_rect())
}
plotSingleGenes("KLK7")
plotSingleGenes <- function(arg_gene){
# Accepts the name of a gene and plots normalized expression for all samples separating Non-inflamed vs inflamed
ggplot(t_genes_list_norm, aes(y=get(arg_gene), x = Inflammation, color=Inflammation))+
geom_boxplot()+
geom_jitter(width=0.2, alpha=0.5, color="black")+
labs(title=arg_gene,
x="Inflammation status",
y="Normalized expression")+
theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
aspect.ratio = 1.5,
plot.background = element_rect(linewidth = 1))
}
plotSingleGenes("KLK7")
plotSingleGenes <- function(arg_gene){
# Accepts the name of a gene and plots normalized expression for all samples separating Non-inflamed vs inflamed
ggplot(t_genes_list_norm, aes(y=get(arg_gene), x = Inflammation, color=Inflammation))+
geom_boxplot()+
geom_jitter(width=0.2, alpha=0.5, color="black")+
labs(title=arg_gene,
x="Inflammation status",
y="Normalized expression")+
theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
aspect.ratio = 1.5,
panel.border = element_rect(linewidth = 1))
}
plotSingleGenes("KLK7")
plotSingleGenes <- function(arg_gene){
# Accepts the name of a gene and plots normalized expression for all samples separating Non-inflamed vs inflamed
ggplot(t_genes_list_norm, aes(y=get(arg_gene), x = Inflammation, color=Inflammation))+
geom_boxplot()+
geom_jitter(width=0.2, alpha=0.5, color="black")+
labs(title=arg_gene,
x="Inflammation status",
y="Normalized expression")+
theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
aspect.ratio = 1.5,
panel.border = element_rect(linewidth = 1, fill = NA))
}
plotSingleGenes("KLK7")
plotSingleGenes <- function(arg_gene){
# Accepts the name of a gene and plots normalized expression for all samples separating Non-inflamed vs inflamed
ggplot(t_genes_list_norm, aes(y=get(arg_gene), x = Inflammation, color=Inflammation))+
geom_boxplot()+
geom_jitter(width=0.2, alpha=0.5, color="black")+
labs(title=arg_gene,
x="Inflammation status",
y="Normalized expression")+
theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
aspect.ratio = 1.5,
panel.background = element_blank(),
panel.border = element_rect(linewidth = 1, fill = NA, ))
}
plotSingleGenes("KLK7")
plotSingleGenes <- function(arg_gene){
# Accepts the name of a gene and plots normalized expression for all samples separating Non-inflamed vs inflamed
ggplot(t_genes_list_norm, aes(y=get(arg_gene), x = Inflammation, color=Inflammation))+
geom_boxplot()+
geom_jitter(width=0.2, alpha=0.5, color="black")+
labs(title=arg_gene,
x="Inflammation status",
y="Normalized expression")+
theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
aspect.ratio = 1.5,
panel.background = element_blank(),
panel.border = element_rect(linewidth = 0.5, fill = NA, ))
}
plotSingleGenes("KLK7")
plotSingleGenes <- function(arg_gene){
# Accepts the name of a gene and plots normalized expression for all samples separating Non-inflamed vs inflamed
ggplot(t_genes_list_norm, aes(y=get(arg_gene), x = Inflammation, color=Inflammation))+
geom_boxplot()+
geom_jitter(width=0.2, alpha=0.5, color="black")+
labs(title=arg_gene,
x="Inflammation status",
y="Normalized expression")+
theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
aspect.ratio = 1.5,
panel.background = element_blank(),
axis.line = element_line(linewidth = 0.5))
}
plotSingleGenes("KLK7")
plotSingleGenes <- function(arg_gene){
# Accepts the name of a gene and plots normalized expression for all samples separating Non-inflamed vs inflamed
ggplot(t_genes_list_norm, aes(y=get(arg_gene), x = Inflammation, color=Inflammation))+
geom_boxplot()+
geom_jitter(width=0.2, alpha=0.5, color="black")+
labs(title=arg_gene,
x="Inflammation status",
y="Normalized expression")+
theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
aspect.ratio = 1.5,
panel.background = element_blank(),
axis.y.line = element_line(linewidth = 0.5))
}
plotSingleGenes("KLK7")
plotSingleGenes <- function(arg_gene){
# Accepts the name of a gene and plots normalized expression for all samples separating Non-inflamed vs inflamed
ggplot(t_genes_list_norm, aes(y=get(arg_gene), x = Inflammation, color=Inflammation))+
geom_boxplot()+
geom_jitter(width=0.2, alpha=0.5, color="black")+
labs(title=arg_gene,
x="Inflammation status",
y="Normalized expression")+
theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
aspect.ratio = 1.5,
panel.background = element_blank(),
axis.line = element_line(linewidth = 0.5))
}
plotSingleGenes("KLK7")
plotSingleGenes <- function(arg_gene){
# Accepts the name of a gene and plots normalized expression for all samples separating Non-inflamed vs inflamed
ggplot(t_genes_list_norm, aes(y=get(arg_gene), x = Inflammation, color=Inflammation))+
geom_boxplot()+
geom_jitter(width=0.2, alpha=0.5, color="black")+
geom_vline(xintercept = 0, linewidth=0.5)
labs(title=arg_gene,
x="Inflammation status",
y="Normalized expression")+
theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
aspect.ratio = 1.5,
panel.background = element_blank())
}
plotSingleGenes("KLK7")
plotSingleGenes <- function(arg_gene){
# Accepts the name of a gene and plots normalized expression for all samples separating Non-inflamed vs inflamed
ggplot(t_genes_list_norm, aes(y=get(arg_gene), x = Inflammation, color=Inflammation))+
geom_boxplot()+
geom_jitter(width=0.2, alpha=0.5, color="black")+
geom_vline(xintercept = 0, linewidth=0.5)+
labs(title=arg_gene,
x="Inflammation status",
y="Normalized expression")+
theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
aspect.ratio = 1.5,
panel.background = element_blank())
}
plotSingleGenes("KLK7")
plotSingleGenes <- function(arg_gene){
# Accepts the name of a gene and plots normalized expression for all samples separating Non-inflamed vs inflamed
ggplot(t_genes_list_norm, aes(y=get(arg_gene), x = Inflammation, color=Inflammation))+
geom_boxplot()+
geom_jitter(width=0.2, alpha=0.5, color="black")+
geom_vline(xintercept = 0.1, linewidth=0.5)+
labs(title=arg_gene,
x="Inflammation status",
y="Normalized expression")+
theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
aspect.ratio = 1.5,
panel.background = element_blank())
}
plotSingleGenes("KLK7")
plotSingleGenes <- function(arg_gene){
# Accepts the name of a gene and plots normalized expression for all samples separating Non-inflamed vs inflamed
ggplot(t_genes_list_norm, aes(y=get(arg_gene), x = Inflammation, color=Inflammation))+
geom_boxplot()+
geom_jitter(width=0.2, alpha=0.5, color="black")+
geom_vline(xintercept = 0.1, linewidth = 1)+
labs(title=arg_gene,
x="Inflammation status",
y="Normalized expression")+
theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
aspect.ratio = 1.5,
panel.background = element_blank())
}
plotSingleGenes("KLK7")
plotSingleGenes <- function(arg_gene){
# Accepts the name of a gene and plots normalized expression for all samples separating Non-inflamed vs inflamed
ggplot(t_genes_list_norm, aes(y=get(arg_gene), x = Inflammation, color=Inflammation))+
geom_boxplot()+
geom_jitter(width=0.2, alpha=0.5, color="black")+
geom_vline(xintercept = 0.1, linewidth = 1)+
geom_hline(yintercept = 4)+
labs(title=arg_gene,
x="Inflammation status",
y="Normalized expression")+
theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
aspect.ratio = 1.5,
panel.background = element_blank())
}
plotSingleGenes("KLK7")
plotSingleGenes <- function(arg_gene){
# Accepts the name of a gene and plots normalized expression for all samples separating Non-inflamed vs inflamed
ggplot(t_genes_list_norm, aes(y=get(arg_gene), x = Inflammation, color=Inflammation))+
geom_boxplot()+
geom_jitter(width=0.2, alpha=0.5, color="black")+
geom_vline(xintercept = 0.2, linewidth = 1)+
labs(title=arg_gene,
x="Inflammation status",
y="Normalized expression")+
theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
aspect.ratio = 1.5,
panel.background = element_blank())
}
plotSingleGenes("KLK7")
plotSingleGenes <- function(arg_gene){
# Accepts the name of a gene and plots normalized expression for all samples separating Non-inflamed vs inflamed
ggplot(t_genes_list_norm, aes(y=get(arg_gene), x = Inflammation, color=Inflammation))+
geom_boxplot()+
geom_jitter(width=0.2, alpha=0.5, color="black")+
labs(title=arg_gene,
x="Inflammation status",
y="Normalized expression")+
theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
aspect.ratio = 1.5,
panel.background = element_blank(),
axis.line = element_line(linewidth = 0.5))
}
plotSingleGenes("KLK7")
plotSingleGenes <- function(arg_gene){
# Accepts the name of a gene and plots normalized expression for all samples separating Non-inflamed vs inflamed
ggplot(t_genes_list_norm, aes(y=get(arg_gene), x = Inflammation, color=Inflammation))+
geom_boxplot()+
geom_jitter(width=0.2, alpha=0.5, color="black")+
geom_vline(xintercept = "Non-inflamed")
labs(title=arg_gene,
x="Inflammation status",
y="Normalized expression")+
theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
aspect.ratio = 1.5,
panel.background = element_blank())
}
plotSingleGenes("KLK7")
plotSingleGenes <- function(arg_gene){
# Accepts the name of a gene and plots normalized expression for all samples separating Non-inflamed vs inflamed
ggplot(t_genes_list_norm, aes(y=get(arg_gene), x = Inflammation, color=Inflammation))+
geom_boxplot()+
geom_jitter(width=0.2, alpha=0.5, color="black")+
geom_vline(xintercept = "Non-inflamed")+
labs(title=arg_gene,
x="Inflammation status",
y="Normalized expression")+
theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
aspect.ratio = 1.5,
panel.background = element_blank())
}
plotSingleGenes("KLK7")
plotSingleGenes <- function(arg_gene){
# Accepts the name of a gene and plots normalized expression for all samples separating Non-inflamed vs inflamed
ggplot(t_genes_list_norm, aes(y=get(arg_gene), x = Inflammation, color=Inflammation))+
geom_boxplot()+
geom_jitter(width=0.2, alpha=0.5, color="black")+
labs(title=arg_gene,
x="Inflammation status",
y="Normalized expression")+
theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
aspect.ratio = 1.5,
panel.background = element_blank(),
axis.line = element_line(linewidth = 0.5))
}
plotSingleGenes("KLK7")
plotsSingleGenes <- list()
for(gene in rownames(gene_list_heatmap)){
plotsSingleGenes[[gene]] <- plotSingleGenes(gene)
}
plotsSingleGenes$KLK7
plotsSingleGenes$MMP7
plotSingleGenes <- function(arg_gene){
# Accepts the name of a gene and plots normalized expression for all samples separating Non-inflamed vs inflamed
ggplot(t_genes_list_norm, aes(y=get(arg_gene), x = Inflammation, color=Inflammation))+
geom_boxplot(outliers = FALSE)+
geom_jitter(width=0.2, alpha=0.5, color="black")+
labs(title=arg_gene,
x="Inflammation status",
y="Normalized expression")+
theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
aspect.ratio = 1.5,
panel.background = element_blank(),
axis.line = element_line(linewidth = 0.5))
}
plotsSingleGenes <- list()
for(gene in rownames(gene_list_heatmap)){
plotsSingleGenes[[gene]] <- plotSingleGenes(gene)
}
plotsSingleGenes$MMP7
plotsSingleGenes$CHI3L1
plotsSingleGenes$IGHGP
plotsSingleGenes$SLC1A7
gene_list_heatmap
wrap_plots(plotsSingleGenes[1:10])
wrap_plots(plotsSingleGenes[1:12])
wrap_plots(plotsSingleGenes[1:12])
wrap_plots(plotsSingleGenes[1:12])
wrap_plots(plotsSingleGenes[1:12])+ plot_layout(guides = "collect")
plotSingleGenes <- function(arg_gene){
# Accepts the name of a gene and plots normalized expression for all samples separating Non-inflamed vs inflamed
ggplot(t_genes_list_norm, aes(y=get(arg_gene), x = Inflammation, color=Inflammation))+
geom_boxplot(outliers = FALSE)+
geom_jitter(width=0.2, alpha=0.5, color="black")+
scale_y_continuous(limits = c(0, max(t_genes_list_norm[[arg_gene]])))
labs(title=arg_gene,
x="Inflammation status",
y="Normalized expression")+
theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
aspect.ratio = 1.5,
panel.background = element_blank(),
axis.line = element_line(linewidth = 0.5))
}
plotsSingleGenes <- list()
for(gene in rownames(gene_list_heatmap)){
plotsSingleGenes[[gene]] <- plotSingleGenes(gene)
}
wrap_plots(plotsSingleGenes[1:12])+ plot_layout(guides = "collect")
plotSingleGenes <- function(arg_gene){
# Accepts the name of a gene and plots normalized expression for all samples separating Non-inflamed vs inflamed
ggplot(t_genes_list_norm, aes(y=get(arg_gene), x = Inflammation, color=Inflammation))+
geom_boxplot(outliers = FALSE)+
geom_jitter(width=0.2, alpha=0.5, color="black")+
scale_y_continuous(limits = c(0, max(t_genes_list_norm[[arg_gene]])))+
labs(title=arg_gene,
x="Inflammation status",
y="Normalized expression")+
theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
aspect.ratio = 1.5,
panel.background = element_blank(),
axis.line = element_line(linewidth = 0.5))
}
plot
plotsSingleGenes <- list()
for(gene in rownames(gene_list_heatmap)){
plotsSingleGenes[[gene]] <- plotSingleGenes(gene)
}
wrap_plots(plotsSingleGenes[1:12])+ plot_layout(guides = "collect")
plotSingleGenes <- function(arg_gene){
# Accepts the name of a gene and plots normalized expression for all samples separating Non-inflamed vs inflamed
ggplot(t_genes_list_norm, aes(y=get(arg_gene), x = Inflammation, color=Inflammation))+
geom_boxplot(outliers = FALSE)+
geom_jitter(width=0.2, alpha=0.5, color="black")+
scale_y_continuous(limits = c(0, 1.2*max(t_genes_list_norm[[arg_gene]])))+
labs(title=arg_gene,
x="Inflammation status",
y="Normalized expression")+
theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
aspect.ratio = 1.5,
panel.background = element_blank(),
axis.line = element_line(linewidth = 0.5))
}
plot
plotsSingleGenes <- list()
for(gene in rownames(gene_list_heatmap)){
plotsSingleGenes[[gene]] <- plotSingleGenes(gene)
}
wrap_plots(plotsSingleGenes[1:12])+ plot_layout(guides = "collect")
plotSingleGenes <- function(arg_gene){
# Accepts the name of a gene and plots normalized expression for all samples separating Non-inflamed vs inflamed
ggplot(t_genes_list_norm, aes(y=get(arg_gene), x = Inflammation, color=Inflammation))+
geom_boxplot(outliers = FALSE)+
geom_jitter(width=0.2, alpha=0.5, color="black")+
scale_y_continuous(limits = c(0, 1.2*max(t_genes_list_norm[[arg_gene]])), expand = expansion(add = 0))+
labs(title=arg_gene,
x="Inflammation status",
y="Normalized expression")+
theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
aspect.ratio = 1.5,
panel.background = element_blank(),
axis.line = element_line(linewidth = 0.5))
}
plot
plotsSingleGenes <- list()
for(gene in rownames(gene_list_heatmap)){
plotsSingleGenes[[gene]] <- plotSingleGenes(gene)
}
wrap_plots(plotsSingleGenes[1:12])+ plot_layout(guides = "collect")
# Import dataset with gene counts
genes_list <- read.delim(file.path(project_dir, "GSE107593_raw_reads_BCHRNAseq.txt"), check.names=F)
genes_list
colnames(genes_list) <- c("ENSG_symbol", colnames(genes_list[2:length(colnames(genes_list))]))
genes_list[,c(1,3,10:ncol(genes_list))]
cts <- as.matrix(genes_list[,c(10:ncol(genes_list))])
rownames(cts) <- genes_list[[3]]
colData <- pca_scores_lognorm[,c(11, 13:15)]
colData$inflammation <- factor(colData$inflammation, levels = c("Non-Inflamed", "Inflamed"))
colData$location <- factor(colData$location)
colData$hospital <- factor(colData$hospital)
cts <- cts[, rownames(colData)]
as.data.frame(cts)
colData <- pca_scores_lognorm[,c(11, 13:15)]
cts <- as.matrix(genes_list[,c(10:ncol(genes_list))])
rownames(cts) <- genes_list[[3]]
colData <- pca_scores_lognorm[,c(11, 13:15)]
colData$inflammation <- factor(colData$inflammation, levels = c("Non-Inflamed", "Inflamed"))
colData$location <- factor(colData$location)
colData$hospital <- factor(colData$hospital)
cts <- cts[, rownames(colData)]
as.data.frame(cts)
colData <- pca_scores_lognorm[,c(11, 13:15)]
colData$inflammation <- factor(colData$inflammation, levels = c("Non-Inflamed", "Inflamed"))
colData$location <- factor(colData$location)
colData$hospital <- factor(colData$hospital)
colData <- pca_scores_lognorm[,c(11, 13:15)]
colData$inflammation <- factor(colData$inflammation, levels = c("Non-Inflamed", "Inflamed"))
colData$location <- factor(colData$location)
colData$hospital <- factor(colData$hospital)
colData
colData <- pca_scores_lognorm[,c(11, 13:15)]
colData$inflammation <- factor(colData$inflammation, levels = c("Non-Inflamed", "Inflamed"))
colData$location <- factor(colData$location)
colData$hospital <- factor(colData$hospital)
colData
# Extract the rotations for pcas with lognormalized counts, all genes
pca_rotations <- data.frame(pca_lognorm$rotation[,1:10])
pca_lognorm_rotations <- data.frame(pca_lognorm$rotation[,1:10])
# Add column with gene names to rotations dataframes
pca_rotations$gene_name <- genes_list$gene_name
pca_lognorm_rotations$gene_name <- genes_list$gene_name
cts <- as.matrix(genes_list[,c(10:ncol(genes_list))])
rownames(cts) <- genes_list[[3]]
cts <- cts[, rownames(colData)]
as.data.frame(cts)
GO_dge_up <- enrichGO(gene = dge_up$Gene, universe = gene_list$Gene, OrgDb = "org.Hs.eg.db", keyType = "SYMBOL", ont = "BP")
temp_GO_dge_up <- as.data.frame(GO_dge_up)[,c("ID", "Description", "GeneRatio", "p.adjust")]
temp_GO_dge_up$Description <- strtrim(temp_GO_dge_up$Description, 50)
rownames(temp_GO_dge_up) <- 1:nrow(temp_GO_dge_up)
temp_GO_dge_up
GO_dge_up_plot <-  as.data.frame(GO_dge_up)[,c("ID", "Description", "GeneRatio", "p.adjust")]
GO_dge_up_plot$Description <- strtrim(GO_dge_up_plot$Description, 48)
GO_dge_up_plot <- GO_dge_up_plot[1:10,]
GO_dge_down_plot <-  as.data.frame(GO_dge_down)[,c("ID", "Description", "GeneRatio", "p.adjust")]
GO_dge_down_plot <- GO_dge_down_plot[1:10,]
gene_list_heatmap <- gene_list %>% arrange(padj)
gene_list_heatmap <- gene_list_heatmap[1:50,]
gene_list_heatmap <- gene_list_heatmap %>% arrange(desc(log2FoldChange))
gene_list_heatmap
gene_list_heatmap <- gene_list %>% arrange(padj)
gene_list_heatmap <- gene_list_heatmap[1:50,]
gene_list_heatmap <- gene_list_heatmap %>% arrange(desc(log2FoldChange))
gene_list_heatmap[,c("baseMean", "log2FoldChange", "padj", "significance")]
rld <- rlog(dds, blind=FALSE)
genes_list_heatmap_norm_all <- as.data.frame(assay(rld))
genes_list_heatmap_norm_all <- genes_list_heatmap_norm_all %>% filter(rownames(genes_list_heatmap_norm_all) %in% rownames(gene_list_heatmap))
genes_list_heatmap_norm_all <- genes_list_heatmap_norm_all[match(rownames(gene_list_heatmap), rownames(genes_list_heatmap_norm_all)), rownames(colData %>% arrange(inflammation) %>% select(inflammation))]
genes_list_heatmap_norm_all
genes_list_heatmap_norm_all <- as.data.frame(assay(rld))
genes_list_heatmap_norm_all <- genes_list_heatmap_norm_all %>% filter(rownames(genes_list_heatmap_norm_all) %in% rownames(gene_list_heatmap))
genes_list_heatmap_norm_all <- genes_list_heatmap_norm_all[match(rownames(gene_list_heatmap), rownames(genes_list_heatmap_norm_all)), rownames(colData %>% arrange(inflammation) %>% select(inflammation))]
genes_list_heatmap_norm_all
genes_list_heatmap_norm_all
cat(`## Lognormalization of counts`)
cat(`"## Lognormalization of counts"`)
rmarkdown::pandoc_version()
plotSingleGenes("CD10")
View(genes_list_lognorm)
plotSingleGenes("CD38")
plotSingleGenes("IL4")
plotSingleGenes("IL4")
plotSingleGenes("IL4R")
plotSingleGenes("IL4")
plotSingleGenes("IL4R")
plotSingleGenes("IL10")
plotSingleGenes("IL11")
plotSingleGenes("IL13")
plotSingleGenes("TGFB1")
plotSingleGenes("TGFB2")
clear()
